apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: airflow
  namespace: staging
  annotations:
    flux.weave.works/automated: "true"
spec:
  releaseName: airflow-staging
  chart:
    repository: https://marclamberti.github.io/airflow-eks-helm-chart
    name: airflow
    version: 1.0.0
  values:
    images:
      airflow:
        repository: "953076219999.dkr.ecr.eu-west-3.amazonaws.com/airflow-eks-docker-staging"
        tag: "f3e94302"
    fernetKey: "zTxhk7FuGqQVPZVoukLn5bGWOrgHzhQnBnaqAItcZGI="
    env:
      - name: "AIRFLOW__KUBERNETES__DAGS_IN_IMAGE"
        value: "True"
      - name: "AIRFLOW__KUBERNETES__NAMESPACE"
        value: "staging"
      - name: "AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY"
        value: "953076219999.dkr.ecr.eu-west-3.amazonaws.com/airflow-eks-docker-staging"
      - name: "AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG"
        value: "f3e94302"
      - name: "AIRFLOW__KUBERNETES__RUN_AS_USER"
        value: "50000"
      - name: "AIRFLOW__KUBERNETES__GIT_SYNC_RUN_AS_USER"
        value: "65533"
      - name: "AIRFLOW__CORE__LOAD_EXAMPLES"
        value: "False"
      - name: "AIRFLOW__WEBSERVER__BASE_URL"
        value: "http://localhost:8080/airflow-staging"
      - name: "AIRFLOW__WEBSERVER__WEB_SERVER_SSL_CERT"
        value: "/opt/airflow/certs/tls.crt"
      - name: "AIRFLOW__WEBSERVER__WEB_SERVER_SSL_KEY"
        value: "/opt/airflow/certs/tls.key"
    executor: "KubernetesExecutor"
    ingress:
      enabled: true
      web:
        path: "airflow-staging"
    webserver:
      livenessProbe:
        scheme: "HTTPS"
      readinessProbe:
        scheme: "HTTPS"
      extraVolumes:
        - name: "certs"
          secret: 
            secretName: "airflow-ssl"
      extraVolumeMounts:
        - name: "certs"
          mountPath: "/opt/airflow/certs"
          readOnly: true